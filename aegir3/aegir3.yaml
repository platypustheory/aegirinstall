---
- name: "End-to-end Aegir 3 build from git source."
  hosts: all

  # Supply values for mysql_root_password and aegir_frontend_url.

  vars:
    ### Dependency roles
    nginx_manage_config: False
    nginx_remove_default_vhost: True
    php_cli_memory_limit: "2048M"
    php_enable_php_fpm: True
    php_enable_webserver: False
    php_set_cli_memory_limit: True
    php_version: "8.1"
    mysql_root_password: "not_a_secure_mysql_password_please_change"

    ### This role
    aegir_db_password: "{{ mysql_root_password }}"
    aegir_frontend_url: "change-this-url.com"
    aegir_http_service_type: nginx
    aegir_install_method: git
    aegir_skynet_enable: True
    aegir_admin_email: "do-not-reply@example.com"
    aegir_fix_ownership: True
    aegir_fix_permissions: True
    aegir_generate_makefile: True

    # Use BOA drush 8:
    aegir_drush_install_method: git
    aegir_drush_source_repo: 'https://github.com/omega8cc/drush'
    aegir_drush_source_install_version: '8-boa-micro'
    aegir_drush_source_update: True

    # Use Consensus' fork of Provision, with D10 support files patched in from BOA, and fixed:
    aegir_provision_repo: https://gitlab.com/consensus.enterprises/aegir/provision
    aegir_provision_version: '3445832-host-drupal-10-on-aegir-3'
    aegir_provision_update: True

  pre_tasks:

  - name: 'Check mysql_root_password has been set.'
    assert:
      that:
        - mysql_root_password != "not_a_secure_mysql_password_please_change"
      fail_msg: 'Please update the mysql_root_password variable before running this playbook.'

  - name: 'Check aegir_frontend_url has been set.'
    assert:
      that:
        - aegir_frontend_url != "change-this-url.com"
      fail_msg: 'Please update the aegir_frontend_url variable before running this playbook.'

  roles:
    - role: geerlingguy.mysql
      become: True
    - role: geerlingguy.nginx
      become: True
    - role: geerlingguy.php-versions
      become: True
    - role: geerlingguy.php
      become: True
    - role: geerlingguy.composer
      become: True
    - role: consensus.aegir.aegir
      become: True

  tasks:

  - name: Check that Aegir front-end is installed and generate login link.
    shell: "drush @hm status && drush @hm uli"
    changed_when: False
    become: True
    become_user: "aegir"
    register: uli

  - debug: msg="{{ uli.stdout_lines }}"

